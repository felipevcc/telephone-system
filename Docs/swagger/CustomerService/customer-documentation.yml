openapi: 3.0.3
info:
  title: Customer microservice - OpenAPI 3.0
  description: |-
    Servicio de gestión de clientes
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: Customer
    description: Endpoints de clientes
paths:
  /customer/{documentType}/{document}:
    get:
      tags:
        - Customer
      summary: Obtener cliente por su documento de identificación
      description: Obtener cliente por su documento de identificación
      parameters:
        - $ref: '#/components/parameters/documentType'
        - $ref: '#/components/parameters/document'
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: No hay resultados
        '500':
          description: Fallo al obtener el cliente

  /customer:
    post:
      tags:
        - Customer
      summary: Crear cliente
      description: Crear un nuevo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerTypeId:
                  type: integer
                name:
                  type: string
                lastName:
                  type: string
                birthdate:
                  type: string
                  format: date
                documentTypeId:
                  type: integer
                document:
                  type: string
                address:
                  type: string
                areaId:
                  type: integer
                email:
                  type: string
                phoneNumber:
                  type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Error al crear el cliente
        '500':
          description: Fallo al crear cliente

  /customer/{customerId}:
    get:
      tags:
        - Customer
      summary: Obtener cliente por su id
      description: Obtener cliente por su id
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: No hay resultados
        '500':
          description: Fallo al obtener el cliente
    
    put:
      tags:
        - Customer
      summary: Update a customer
      description: Update a customer
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Error al crear cliente o ya existe
        '500':
          description: Fallo al actualizar el cliente

  /customer/upload:
    post:
      tags:
        - Customer
      summary: Cargar archivo con registros de clientes
      description: Subida de archivo con registros de clientes para almacenarlos en la base de datos
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Operación exitosa
          content:
            application/csv:
              schema:
                type: string
                format: binary
        '400':
          description: Formato del archivo inválido
        '417':
          description: Expectativa fallida
        '500':
          description: Fallo al subir el archivo

  /customer/download:
    get:
      tags:
        - Customer
      summary: Descargar archivo con registros de clientes
      description: Descarga de archivo con los registros de clientes almacenados en la base de datos
      responses:
        '200':
          description: Operación exitosa
          content:
            application/csv:
              schema:
                type: string
                format: binary
        '500':
          description: Fallo al descargar el archivo

  /customer/customerTypes:
    get:
      tags:
        - Customer
      summary: Obtener los tipos de clientes
      description: Obtener los tipos de clientes (Residencial y comercial)
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType'
        '404':
          description: No hay resultados
        '500':
          description: Fallo al obtener los tipos de cliente

  /customer/documentTypes:
    get:
      tags:
        - Customer
      summary: Obtener los tipos de documentos de identificación
      description: Obtener los tipos de documentos de identificación (Cédula de ciudadanía, cédula de extranjería y Pasaporte)
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentType'
        '404':
          description: No hay resultados
        '500':
          description: Fallo al obtener los tipos de cliente

components:
  schemas:
    Customer:
      type: object
      properties:
        customerId:
          type: integer
        customerTypeId:
          type: integer
        name:
          type: string
        lastName:
          type: string
        birthdate:
          type: string
          format: date
        documentTypeId:
          type: integer
        document:
          type: string
        address:
          type: string
        areaId:
          type: integer
        email:
          type: string
        phoneNumber:
          type: string
    CustomerType:
      type: object
      properties:
        customerTypeId:
          type: integer
        customerTypeName:
          type: string
    DocumentType:
      type: object
      properties:
        documentTypeId:
          type: integer
        typeCode:
          type: string
        description:
          type: string
  parameters:
    documentType:
      in: path
      name: documentType
      required: true
      description: Id del tipo de documento del cliente
      schema:
        type: integer
    document:
      in: path
      name: document
      required: true
      description: Documento de identidad del cliente
      schema:
        type: string
    customerId:
      in: path
      name: customerId
      required: true
      description: Id del cliente
      schema:
        type: integer
